
import os, sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
import requests
import json


from utils.config import config, hostName, isInDocker

apis = config['apis']



fileContent = "\
###################################################\n\
## DO NOT EDIT THIS FILE ##########################\n\
## THIS FILE IS TO BE GENERATED BY ################\n\
## utils/generateApiFunction.py ###################\n\
###################################################\n\n"


endOfFunction = "\
        if response.status_code  != 200:\n\
            message = (json.loads(response._content.decode('utf-8')))\n\
            raise Exception( f'{response.status_code}: {message}')\n\
        else:\n\
            return json.loads(response._content.decode('utf-8'))\n\n\
"

for dockerOption in (True, False):
    fileContent += "import json\nimport requests\n\n"
    for api, detail in apis.items():
        print (f"Pulling from {api}:")
        rootResponse = requests.get(f"http://{hostName}/{api}/openapi.json")
        openApiObj = json.loads(rootResponse._content.decode('utf-8'))
        
        for rootPath, pathDetail in openApiObj['paths'].items():
            if pathDetail['get']['tags'] != ['Versions']:
                continue
            empty, apiVersion, apiFileName = rootPath.split('/')
            print (f"  Version {apiVersion}:")
            response = requests.get(f"http://{hostName}/{api}/{apiVersion}/{apiFileName}")
            specPaths = json.loads(response._content.decode('utf-8'))['paths']
            fileContent += f"\nclass {api}_{apiVersion}:\n"
            for path, pathDetail in specPaths.items():
                for method, actionDetail in pathDetail.items():
                    functionName = actionDetail['summary'].replace(" ", '')
                    print (f"    Function {functionName}")
                    params = []
                    payload = False
                    if 'parameters' in actionDetail:
                        for thisParam in actionDetail['parameters']:
                            params.append(thisParam['name'])
                    if 'requestBody' in actionDetail:
                        payload = True
                    functionParamList = list(params)
                    if payload: functionParamList.append('payload')
                    functionParam = ", ".join(list(functionParamList))
                    fileContent += f"    def {functionName} ( {functionParam} ):\n"
                    fullPath = f"http://{api}:{detail['port']}/{api}/{apiVersion}{path}" \
                        if dockerOption else \
                        f"http://{hostName}/{api}/{apiVersion}{path}"
                    
                    fileContent += f"        response = requests.{method}(f'{fullPath}'{', json=payload' if payload else ''})\n"
                    fileContent += endOfFunction
    tier = '_docker' if dockerOption else ''
    file = open(f"utils/apiFunctions{tier}.py", "w")
    file.write(fileContent)
    file.close()

    

